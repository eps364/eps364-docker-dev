services:
  keycloak:
    image: ${KEYCLOAK_IMAGE:-quay.io/keycloak/keycloak:26.0}
    container_name: keycloak
    environment:
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://keycloak-db:5432/${KC_DB_NAME}
      KC_DB_USERNAME: ${KC_DB_USERNAME}
      KC_DB_PASSWORD: ${KC_DB_PASSWORD}
      KC_HOSTNAME: ${KEYCLOAK_HOSTNAME:-localhost}
      KC_HOSTNAME_PORT: ${KEYCLOAK_PORT}
      KC_HOSTNAME_STRICT: false
      KC_HOSTNAME_STRICT_HTTPS: false
      KC_HTTP_ENABLED: true
      KC_HEALTH_ENABLED: true
      KC_METRICS_ENABLED: true
    ports:
      - "${KEYCLOAK_PORT}:8080"
    depends_on:
      keycloak-db:
        condition: service_healthy
    command: start-dev
    volumes:
      - keycloak_data:/opt/keycloak/data
    restart: always
    networks:
      - keycloak-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health/ready"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  keycloak-db:
    image: ${KC_DB_IMAGE:-postgres:15}
    container_name: keycloak-db
    environment:
      POSTGRES_DB: ${KC_DB_NAME}
      POSTGRES_USER: ${KC_DB_USERNAME}
      POSTGRES_PASSWORD: ${KC_DB_PASSWORD}
    ports:
      - "${KC_DB_EXTERNAL_PORT:-5432}:5432"
    volumes:
      - keycloak_db_data:/var/lib/postgresql/data
    restart: always
    networks:
      - keycloak-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${KC_DB_USERNAME}"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  keycloak-network:
    driver: bridge

volumes:
  keycloak_data:
  keycloak_db_data: